geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = x, yend=predicted), alpha=0.2) +
geom_point(aes(color=abs(model$residuals))) +
scale_color_continuous(low = "black", high = "red") +
guides(color=FALSE) +
geom_point(aes(y=predicted),shape=1) +
labs(x = x_name, y = y_name) +
theme_bw()
# Construction of Confidence Intervals
clower = predict(model, interval='confidence', level=0.95)[,2]
cupper = predict(model, interval='confidence', level=0.95)[,3]
plower = predict(model, interval='prediction', level=0.95)[,2]
pupper = predict(model, interval='prediction', level=0.95)[,3]
g2 = g + geom_ribbon(aes(ymin = clower, ymax = cupper), alpha=0.3, col = 'red') +
geom_ribbon(aes(ymin=plower, ymax = pupper), alpha=0.2, col='blue')
ggsave("./Linear Model/plot.pdf", g2)
png(filename = "./Linear Model/diagnostics.pdf")
par(mfrow=c(2,2))
plot(model,which=c(1,2,4,6))
dev.off()
# plot(x,
#      abs(model$residuals),
#      xlab = x_name,
#      ylab = 'Residual Values Squared',
#      main = 'Squared Residuals compared to MSE')
# abline(h=sqrt(mean(model$residuals^2)), lty = 2, lwd=3, col = 'red')
# ss = smooth.spline(x, model$residuals^2, cv = TRUE)
# lines(ss, lwd=2, col='blue')
# abline(h=mean(ss$y), lwd=2, col='black')
# legend("topleft",
#      c("MSE", "Spline", "Spline Mean"),
#      lty = c(2, 1, 1),
#      col = c("red", "blue", "black"))
}
require(gridExtra)
plot_w_bands = function(df, x_name, y_name) {
x = df[,x_name][[1]]
y = df[,y_name][[1]]
model = lm(y ~ x, data=df)
predicted = predict(model)
g = ggplot(df, aes(x,y)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = x, yend=predicted), alpha=0.2) +
geom_point(aes(color=abs(model$residuals))) +
scale_color_continuous(low = "black", high = "red") +
guides(color=FALSE) +
geom_point(aes(y=predicted),shape=1) +
labs(x = x_name, y = y_name) +
theme_bw()
# Construction of Confidence Intervals
clower = predict(model, interval='confidence', level=0.95)[,2]
cupper = predict(model, interval='confidence', level=0.95)[,3]
plower = predict(model, interval='prediction', level=0.95)[,2]
pupper = predict(model, interval='prediction', level=0.95)[,3]
g2 = g + geom_ribbon(aes(ymin = clower, ymax = cupper), alpha=0.3, col = 'red') +
geom_ribbon(aes(ymin=plower, ymax = pupper), alpha=0.2, col='blue')
ggsave("./Linear Model/plot.pdf", g2)
png(filename = "./Linear Model/diagnostics.png")
par(mfrow=c(2,2))
plot(model,which=c(1,2,4,6))
dev.off()
# plot(x,
#      abs(model$residuals),
#      xlab = x_name,
#      ylab = 'Residual Values Squared',
#      main = 'Squared Residuals compared to MSE')
# abline(h=sqrt(mean(model$residuals^2)), lty = 2, lwd=3, col = 'red')
# ss = smooth.spline(x, model$residuals^2, cv = TRUE)
# lines(ss, lwd=2, col='blue')
# abline(h=mean(ss$y), lwd=2, col='black')
# legend("topleft",
#      c("MSE", "Spline", "Spline Mean"),
#      lty = c(2, 1, 1),
#      col = c("red", "blue", "black"))
}
ames_train %>%
filter(GrLivArea <= 4000) %>%
mutate(SalePrice = log1p(SalePrice), GrLivArea = log1p(GrLivArea)) %>%
plot_w_bands(., "GrLivArea", "SalePrice")
require(gridExtra)
plot_w_bands = function(df, x_name, y_name) {
x = df[,x_name][[1]]
y = df[,y_name][[1]]
model = lm(y ~ x, data=df)
predicted = predict(model)
g = ggplot(df, aes(x,y)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = x, yend=predicted), alpha=0.2) +
geom_point(aes(color=abs(model$residuals))) +
scale_color_continuous(low = "black", high = "red") +
guides(color=FALSE) +
geom_point(aes(y=predicted),shape=1) +
labs(x = x_name, y = y_name) +
theme_bw()
# Construction of Confidence Intervals
clower = predict(model, interval='confidence', level=0.95)[,2]
cupper = predict(model, interval='confidence', level=0.95)[,3]
plower = predict(model, interval='prediction', level=0.95)[,2]
pupper = predict(model, interval='prediction', level=0.95)[,3]
g2 = g + geom_ribbon(aes(ymin = clower, ymax = cupper), alpha=0.3, col = 'red') +
geom_ribbon(aes(ymin=plower, ymax = pupper), alpha=0.2, col='blue')
ggsave("./Linear Model/plot.pdf", g2)
pdf(filename = "./Linear Model/diagnostics.pdf")
par(mfrow=c(2,2))
plot(model,which=c(1,2,4,6))
dev.off()
# plot(x,
#      abs(model$residuals),
#      xlab = x_name,
#      ylab = 'Residual Values Squared',
#      main = 'Squared Residuals compared to MSE')
# abline(h=sqrt(mean(model$residuals^2)), lty = 2, lwd=3, col = 'red')
# ss = smooth.spline(x, model$residuals^2, cv = TRUE)
# lines(ss, lwd=2, col='blue')
# abline(h=mean(ss$y), lwd=2, col='black')
# legend("topleft",
#      c("MSE", "Spline", "Spline Mean"),
#      lty = c(2, 1, 1),
#      col = c("red", "blue", "black"))
}
ames_train %>%
filter(GrLivArea <= 4000) %>%
mutate(SalePrice = log1p(SalePrice), GrLivArea = log1p(GrLivArea)) %>%
plot_w_bands(., "GrLivArea", "SalePrice")
require(gridExtra)
plot_w_bands = function(df, x_name, y_name) {
x = df[,x_name][[1]]
y = df[,y_name][[1]]
model = lm(y ~ x, data=df)
predicted = predict(model)
g = ggplot(df, aes(x,y)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = x, yend=predicted), alpha=0.2) +
geom_point(aes(color=abs(model$residuals))) +
scale_color_continuous(low = "black", high = "red") +
guides(color=FALSE) +
geom_point(aes(y=predicted),shape=1) +
labs(x = x_name, y = y_name) +
theme_bw()
# Construction of Confidence Intervals
clower = predict(model, interval='confidence', level=0.95)[,2]
cupper = predict(model, interval='confidence', level=0.95)[,3]
plower = predict(model, interval='prediction', level=0.95)[,2]
pupper = predict(model, interval='prediction', level=0.95)[,3]
g2 = g + geom_ribbon(aes(ymin = clower, ymax = cupper), alpha=0.3, col = 'red') +
geom_ribbon(aes(ymin=plower, ymax = pupper), alpha=0.2, col='blue')
ggsave("./Linear Model/plot.pdf", g2)
pdf("./Linear Model/diagnostics.pdf")
par(mfrow=c(2,2))
plot(model,which=c(1,2,4,6))
dev.off()
# plot(x,
#      abs(model$residuals),
#      xlab = x_name,
#      ylab = 'Residual Values Squared',
#      main = 'Squared Residuals compared to MSE')
# abline(h=sqrt(mean(model$residuals^2)), lty = 2, lwd=3, col = 'red')
# ss = smooth.spline(x, model$residuals^2, cv = TRUE)
# lines(ss, lwd=2, col='blue')
# abline(h=mean(ss$y), lwd=2, col='black')
# legend("topleft",
#      c("MSE", "Spline", "Spline Mean"),
#      lty = c(2, 1, 1),
#      col = c("red", "blue", "black"))
}
ames_train %>%
filter(GrLivArea <= 4000) %>%
mutate(SalePrice = log1p(SalePrice), GrLivArea = log1p(GrLivArea)) %>%
plot_w_bands(., "GrLivArea", "SalePrice")
dirname = './Linear Model/' + y_name + '~' + x_name
dir.create(dirname)
dirname = './Linear Model/' + y_name + '~' + x_name
require(gridExtra)
plot_w_bands = function(df, x_name, y_name) {
x = df[,x_name][[1]]
y = df[,y_name][[1]]
model = lm(y ~ x, data=df)
predicted = predict(model)
g = ggplot(df, aes(x,y)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = x, yend=predicted), alpha=0.2) +
geom_point(aes(color=abs(model$residuals))) +
scale_color_continuous(low = "black", high = "red") +
guides(color=FALSE) +
geom_point(aes(y=predicted),shape=1) +
labs(x = x_name, y = y_name) +
theme_bw()
# Construction of Confidence Intervals
clower = predict(model, interval='confidence', level=0.95)[,2]
cupper = predict(model, interval='confidence', level=0.95)[,3]
plower = predict(model, interval='prediction', level=0.95)[,2]
pupper = predict(model, interval='prediction', level=0.95)[,3]
g2 = g + geom_ribbon(aes(ymin = clower, ymax = cupper), alpha=0.3, col = 'red') +
geom_ribbon(aes(ymin=plower, ymax = pupper), alpha=0.2, col='blue')
dirname = y_name + '~' + x_name
dir.create("./Linear Model/" + dirname)
ggsave("./Linear Model/" + dirname + "/plot.pdf", g2)
pdf("./Linear Model/" + dirname + "diagnostics.pdf")
par(mfrow=c(2,2))
plot(model,which=c(1,2,4,6))
dev.off()
# plot(x,
#      abs(model$residuals),
#      xlab = x_name,
#      ylab = 'Residual Values Squared',
#      main = 'Squared Residuals compared to MSE')
# abline(h=sqrt(mean(model$residuals^2)), lty = 2, lwd=3, col = 'red')
# ss = smooth.spline(x, model$residuals^2, cv = TRUE)
# lines(ss, lwd=2, col='blue')
# abline(h=mean(ss$y), lwd=2, col='black')
# legend("topleft",
#      c("MSE", "Spline", "Spline Mean"),
#      lty = c(2, 1, 1),
#      col = c("red", "blue", "black"))
}
ames_train %>%
filter(GrLivArea <= 4000) %>%
mutate(SalePrice = log1p(SalePrice), GrLivArea = log1p(GrLivArea)) %>%
plot_w_bands(., "GrLivArea", "SalePrice")
paste("A","B")
paste("A","B",SEP='')
paste0("A","B")
require(gridExtra)
plot_w_bands = function(df, x_name, y_name) {
x = df[,x_name][[1]]
y = df[,y_name][[1]]
model = lm(y ~ x, data=df)
predicted = predict(model)
g = ggplot(df, aes(x,y)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = x, yend=predicted), alpha=0.2) +
geom_point(aes(color=abs(model$residuals))) +
scale_color_continuous(low = "black", high = "red") +
guides(color=FALSE) +
geom_point(aes(y=predicted),shape=1) +
labs(x = x_name, y = y_name) +
theme_bw()
# Construction of Confidence Intervals
clower = predict(model, interval='confidence', level=0.95)[,2]
cupper = predict(model, interval='confidence', level=0.95)[,3]
plower = predict(model, interval='prediction', level=0.95)[,2]
pupper = predict(model, interval='prediction', level=0.95)[,3]
g2 = g + geom_ribbon(aes(ymin = clower, ymax = cupper), alpha=0.3, col = 'red') +
geom_ribbon(aes(ymin=plower, ymax = pupper), alpha=0.2, col='blue')
dirname = paste0(y_name,'~',x_name)
dir.create(paste0("./Linear Model/",dirname))
ggsave(paste0("./Linear Model/",dirname,"/plot.pdf"), g2)
pdf(paste0("./Linear Model/",dirname,"diagnostics.pdf"))
par(mfrow=c(2,2))
plot(model,which=c(1,2,4,6))
dev.off()
# plot(x,
#      abs(model$residuals),
#      xlab = x_name,
#      ylab = 'Residual Values Squared',
#      main = 'Squared Residuals compared to MSE')
# abline(h=sqrt(mean(model$residuals^2)), lty = 2, lwd=3, col = 'red')
# ss = smooth.spline(x, model$residuals^2, cv = TRUE)
# lines(ss, lwd=2, col='blue')
# abline(h=mean(ss$y), lwd=2, col='black')
# legend("topleft",
#      c("MSE", "Spline", "Spline Mean"),
#      lty = c(2, 1, 1),
#      col = c("red", "blue", "black"))
}
ames_train %>%
filter(GrLivArea <= 4000) %>%
mutate(SalePrice = log1p(SalePrice), GrLivArea = log1p(GrLivArea)) %>%
plot_w_bands(., "GrLivArea", "SalePrice")
require(gridExtra)
plot_w_bands = function(df, x_name, y_name) {
x = df[,x_name][[1]]
y = df[,y_name][[1]]
model = lm(y ~ x, data=df)
predicted = predict(model)
g = ggplot(df, aes(x,y)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = x, yend=predicted), alpha=0.2) +
geom_point(aes(color=abs(model$residuals))) +
scale_color_continuous(low = "black", high = "red") +
guides(color=FALSE) +
geom_point(aes(y=predicted),shape=1) +
labs(x = x_name, y = y_name) +
theme_bw()
# Construction of Confidence Intervals
clower = predict(model, interval='confidence', level=0.95)[,2]
cupper = predict(model, interval='confidence', level=0.95)[,3]
plower = predict(model, interval='prediction', level=0.95)[,2]
pupper = predict(model, interval='prediction', level=0.95)[,3]
g2 = g + geom_ribbon(aes(ymin = clower, ymax = cupper), alpha=0.3, col = 'red') +
geom_ribbon(aes(ymin=plower, ymax = pupper), alpha=0.2, col='blue')
dirname = paste0(y_name,'~',x_name)
dir.create(paste0("./Linear Model/",dirname))
ggsave(paste0("./Linear Model/",dirname,"/plot.pdf"), g2)
pdf(paste0("./Linear Model/",dirname,"/diagnostics.pdf"))
par(mfrow=c(2,2))
plot(model,which=c(1,2,4,6))
dev.off()
# plot(x,
#      abs(model$residuals),
#      xlab = x_name,
#      ylab = 'Residual Values Squared',
#      main = 'Squared Residuals compared to MSE')
# abline(h=sqrt(mean(model$residuals^2)), lty = 2, lwd=3, col = 'red')
# ss = smooth.spline(x, model$residuals^2, cv = TRUE)
# lines(ss, lwd=2, col='blue')
# abline(h=mean(ss$y), lwd=2, col='black')
# legend("topleft",
#      c("MSE", "Spline", "Spline Mean"),
#      lty = c(2, 1, 1),
#      col = c("red", "blue", "black"))
}
ames_train %>%
filter(GrLivArea <= 4000) %>%
mutate(SalePrice = log1p(SalePrice), GrLivArea = log1p(GrLivArea)) %>%
plot_w_bands(., "GrLivArea", "SalePrice")
ames_train %>%
filter(GrLivArea <= 4000) %>%
mutate(SalePrice = log1p(SalePrice), GrLivArea = log1p(GrLivArea)) %>%
plot_w_bands(., "TotalSF", "SalePrice")
ames_train %>%
filter(GrLivArea <= 4000) %>%
mutate(SalePrice = log1p(SalePrice), GrLivArea = log1p(GrLivArea)) %>%
plot_w_bands(., "GarageArea", "SalePrice")
ames_train %>%
filter(GrLivArea <= 4000) %>%
mutate(SalePrice = log1p(SalePrice), GrLivArea = log1p(GrLivArea)) %>%
plot_w_bands(., "GarageArea", "SalePrice")
require(gridExtra)
plot_w_bands = function(df, x_name, y_name) {
x = df[,x_name][[1]]
y = df[,y_name][[1]]
model = lm(y ~ x, data=df)
predicted = predict(model)
g = ggplot(df, aes(x,y)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = x, yend=predicted), alpha=0.2) +
geom_point(aes(color=abs(model$residuals))) +
scale_color_continuous(low = "black", high = "red") +
guides(color=FALSE) +
geom_point(aes(y=predicted),shape=1) +
labs(x = x_name, y = y_name) +
theme_bw()
# Construction of Confidence Intervals
clower = predict(model, interval='confidence', level=0.95)[,2]
cupper = predict(model, interval='confidence', level=0.95)[,3]
plower = predict(model, interval='prediction', level=0.95)[,2]
pupper = predict(model, interval='prediction', level=0.95)[,3]
g2 = g + geom_ribbon(aes(ymin = clower, ymax = cupper), alpha=0.3, col = 'red') +
geom_ribbon(aes(ymin=plower, ymax = pupper), alpha=0.2, col='blue')
model_name = paste0(y_name,'~',x_name)
dir.create(paste0("./Linear Model/",model_name))
ggsave(paste0("./Linear Model/",modelname,"/",model_name,"_plot.pdf"), g2)
pdf(paste0("./Linear Model/",dirname,"/",model_name,"_diagnostic.pdf"))
par(mfrow=c(2,2))
plot(model,which=c(1,2,4,6))
dev.off()
# plot(x,
#      abs(model$residuals),
#      xlab = x_name,
#      ylab = 'Residual Values Squared',
#      main = 'Squared Residuals compared to MSE')
# abline(h=sqrt(mean(model$residuals^2)), lty = 2, lwd=3, col = 'red')
# ss = smooth.spline(x, model$residuals^2, cv = TRUE)
# lines(ss, lwd=2, col='blue')
# abline(h=mean(ss$y), lwd=2, col='black')
# legend("topleft",
#      c("MSE", "Spline", "Spline Mean"),
#      lty = c(2, 1, 1),
#      col = c("red", "blue", "black"))
}
require(gridExtra)
plot_w_bands = function(df, x_name, y_name) {
x = df[,x_name][[1]]
y = df[,y_name][[1]]
model = lm(y ~ x, data=df)
predicted = predict(model)
g = ggplot(df, aes(x,y)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = x, yend=predicted), alpha=0.2) +
geom_point(aes(color=abs(model$residuals))) +
scale_color_continuous(low = "black", high = "red") +
guides(color=FALSE) +
geom_point(aes(y=predicted),shape=1) +
labs(x = x_name, y = y_name) +
theme_bw()
# Construction of Confidence Intervals
clower = predict(model, interval='confidence', level=0.95)[,2]
cupper = predict(model, interval='confidence', level=0.95)[,3]
plower = predict(model, interval='prediction', level=0.95)[,2]
pupper = predict(model, interval='prediction', level=0.95)[,3]
g2 = g + geom_ribbon(aes(ymin = clower, ymax = cupper), alpha=0.3, col = 'red') +
geom_ribbon(aes(ymin=plower, ymax = pupper), alpha=0.2, col='blue')
model_name = paste0(y_name,'~',x_name)
dir.create(paste0("./Linear Model/",model_name))
ggsave(paste0("./Linear Model/",modelname,"/",model_name,"_plot.pdf"), g2)
pdf(paste0("./Linear Model/",dirname,"/",model_name,"_diagnostic.pdf"))
par(mfrow=c(2,2))
plot(model,which=c(1,2,4,6))
dev.off()
# plot(x,
#      abs(model$residuals),
#      xlab = x_name,
#      ylab = 'Residual Values Squared',
#      main = 'Squared Residuals compared to MSE')
# abline(h=sqrt(mean(model$residuals^2)), lty = 2, lwd=3, col = 'red')
# ss = smooth.spline(x, model$residuals^2, cv = TRUE)
# lines(ss, lwd=2, col='blue')
# abline(h=mean(ss$y), lwd=2, col='black')
# legend("topleft",
#      c("MSE", "Spline", "Spline Mean"),
#      lty = c(2, 1, 1),
#      col = c("red", "blue", "black"))
}
ames_train %>%
filter(GrLivArea <= 4000) %>%
mutate(SalePrice = log1p(SalePrice), GrLivArea = log1p(GrLivArea)) %>%
plot_w_bands(., "GarageArea", "SalePrice")
require(gridExtra)
plot_w_bands = function(df, x_name, y_name) {
x = df[,x_name][[1]]
y = df[,y_name][[1]]
model = lm(y ~ x, data=df)
predicted = predict(model)
g = ggplot(df, aes(x,y)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = x, yend=predicted), alpha=0.2) +
geom_point(aes(color=abs(model$residuals))) +
scale_color_continuous(low = "black", high = "red") +
guides(color=FALSE) +
geom_point(aes(y=predicted),shape=1) +
labs(x = x_name, y = y_name) +
theme_bw()
# Construction of Confidence Intervals
clower = predict(model, interval='confidence', level=0.95)[,2]
cupper = predict(model, interval='confidence', level=0.95)[,3]
plower = predict(model, interval='prediction', level=0.95)[,2]
pupper = predict(model, interval='prediction', level=0.95)[,3]
g2 = g + geom_ribbon(aes(ymin = clower, ymax = cupper), alpha=0.3, col = 'red') +
geom_ribbon(aes(ymin=plower, ymax = pupper), alpha=0.2, col='blue')
model_name = paste0(y_name,'~',x_name)
dir.create(paste0("./Linear Model/",model_name))
ggsave(paste0("./Linear Model/",model_name,"/",model_name,"_plot.pdf"), g2)
pdf(paste0("./Linear Model/",model_name,"/",model_name,"_diagnostic.pdf"))
par(mfrow=c(2,2))
plot(model,which=c(1,2,4,6))
dev.off()
# plot(x,
#      abs(model$residuals),
#      xlab = x_name,
#      ylab = 'Residual Values Squared',
#      main = 'Squared Residuals compared to MSE')
# abline(h=sqrt(mean(model$residuals^2)), lty = 2, lwd=3, col = 'red')
# ss = smooth.spline(x, model$residuals^2, cv = TRUE)
# lines(ss, lwd=2, col='blue')
# abline(h=mean(ss$y), lwd=2, col='black')
# legend("topleft",
#      c("MSE", "Spline", "Spline Mean"),
#      lty = c(2, 1, 1),
#      col = c("red", "blue", "black"))
}
ames_train %>%
filter(GrLivArea <= 4000) %>%
mutate(SalePrice = log1p(SalePrice), GrLivArea = log1p(GrLivArea)) %>%
plot_w_bands(., "GarageArea", "SalePrice")
require(gridExtra)
plot_w_bands = function(df, x_name, y_name) {
x = df[,x_name][[1]]
y = df[,y_name][[1]]
model = lm(y ~ x, data=df)
predicted = predict(model)
g = ggplot(df, aes(x,y)) +
geom_smooth(method = "lm", se = FALSE, color = "lightgrey") +
geom_segment(aes(xend = x, yend=predicted), alpha=0.2) +
geom_point(aes(color=abs(model$residuals))) +
scale_color_continuous(low = "black", high = "red") +
guides(color=FALSE) +
geom_point(aes(y=predicted),shape=1) +
labs(x = x_name, y = y_name) +
theme_bw()
# Construction of Confidence Intervals
clower = predict(model, interval='confidence', level=0.95)[,2]
cupper = predict(model, interval='confidence', level=0.95)[,3]
plower = predict(model, interval='prediction', level=0.95)[,2]
pupper = predict(model, interval='prediction', level=0.95)[,3]
g2 = g + geom_ribbon(aes(ymin = clower, ymax = cupper), alpha=0.3, col = 'red') +
geom_ribbon(aes(ymin=plower, ymax = pupper), alpha=0.2, col='blue')
model_name = paste0(y_name,'~',x_name)
dir.create(paste0("./Linear Model/",model_name))
ggsave(paste0("./Linear Model/",model_name,"/scatter_plot.pdf"), g2)
pdf(paste0("./Linear Model/",model_name,"/residual_plots.pdf"))
par(mfrow=c(2,2))
plot(model,which=c(1,2,4,6))
dev.off()
# plot(x,
#      abs(model$residuals),
#      xlab = x_name,
#      ylab = 'Residual Values Squared',
#      main = 'Squared Residuals compared to MSE')
# abline(h=sqrt(mean(model$residuals^2)), lty = 2, lwd=3, col = 'red')
# ss = smooth.spline(x, model$residuals^2, cv = TRUE)
# lines(ss, lwd=2, col='blue')
# abline(h=mean(ss$y), lwd=2, col='black')
# legend("topleft",
#      c("MSE", "Spline", "Spline Mean"),
#      lty = c(2, 1, 1),
#      col = c("red", "blue", "black"))
}
ames_train %>%
filter(GrLivArea <= 4000) %>%
mutate(SalePrice = log1p(SalePrice), GrLivArea = log1p(GrLivArea)) %>%
plot_w_bands(., "GarageArea", "SalePrice")
